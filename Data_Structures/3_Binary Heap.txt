binary heap structured as binary tree
0, 1, 2 children
child node is a node below a node

invariant
min heap value <= child

shape of tree
balanced left and right have equal amounts of nodes
left node bonus of 1 node

insertion compare nodes
child to parent
if child is greater than parent
swap nodes and repeat

deletion when at root
take element from bottom of heap to balance
is balanced take from right side
swap with smallest child