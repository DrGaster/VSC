Repository
# a directory database and all versions of the data
    In many ways, you can think of a Git repository as a directory that stores all the files, folders, and content needed for your project. What it actually is, is the object database of the project, storing everything from the files themselves, to the versions of those files, commits, deletions, et cetera. Repositories are not limited by user, and can be shared and copied (see: fork).
Clone
# copy of the repository, communicates with master branch via push and pull
    A clone is a copy of a repository or the action of copying a repository. When cloning a repository into another branch, the new branch becomes a remote-tracking branch that can talk upstream to its origin branch (via pushes, pulls, and fetches).
Commit
#    used to save your changes to the local repository.
Merge
# updating a branch with the changes of another branch
    Taking the changes from one branch and adding them into another (traditionally master) branch. These commits are usually first requested via pull request before being merged by a project maintainer.
Staged changes
#    Changes that are in staging area waiting to be sent to version control
Unstaged changes
#    changes that are not tracked by the Git.
Prune
# removes unaccessable objects
    an internal housekeeping utility that cleans up unreachable or "orphaned" Git objects. Unreachable objects are those that are inaccessible by any refs.
    Any commit that cannot be accessed through a branch or tag is considered unreachable.
Fetch
# copying branch data to local workstation
    By performing a Git fetch, you are downloading and copying that branchâ€™s files to your workstation. Multiple branches can be fetched at once, and you can rename the branches when running the command to suit your needs.
Branch
# version that differs from its origin
    A version of the repository that diverges from the main working project. Branches can be a new version of a repository, experimental changes, or personal forks of a repository for users to alter and test changes.
Origin
#    a shorthand name for the remote repository that a project was originally cloned from.
HEAD
    HEAD is a reference variable used to denote the most current commit of the repository in which you are working. When you add a new commit, HEAD will then become that new commit.
Conflict
# 


Why?

How?
